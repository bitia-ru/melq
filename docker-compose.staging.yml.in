---
version: '3'
services:
  gw:
    build: ./gw-staging
    tty: true
    restart: always
    ports:
      - ${PORT:-80}:80
  auth:
    build: ./auth
    tty: true
    restart: always
    environment:
      DB_HOST: db
      RAILS_ENV: ${RAILS_ENV:-development}
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT:-1}
      SECRET_KEY_BASE: foobar
      SENTRY_DSN: ${SENTRY:-}
    depends_on:
      - db
      - redis
    volumes:
      - ./auth/app:/app/app
  backend:
    build: ./backend
    tty: true
    restart: always
    environment:
      DB_HOST: db
      EMAIL_PASSWORD: ${EMAIL_PASSWORD:-123456}
      RAILS_ENV: ${RAILS_ENV:-development}
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT:-1}
      REDIS_URL: redis://redis:6379/1
      SECRET_KEY_BASE: foobar
      SENTRY_DSN: ${SENTRY_DSN:-}
    depends_on:
      - db
      - redis
    volumes:
      - ./storage:/app/storage
      - ./backend:/app
  job:
    build: ./backend
    command: bundle exec sidekiq
    tty: true
    restart: always
    environment:
      DB_HOST: db
      EMAIL_PASSWORD: ${EMAIL_PASSWORD:-123456}
      RAILS_ENV: ${RAILS_ENV:-development}
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT:-1}
      REDIS_URL: redis://redis:6379/1
      SECRET_KEY_BASE: foobar
      SENTRY_DSN: ${SENTRY_DSN:-}
    depends_on:
      - db
      - redis
    volumes:
      - ./storage:/app/storage
      - ./sandbox:/tmp/sandbox
  release_current:
    tty: true
    restart: always
    build:
      context: ./frontend
      args:
        apiUrl: ${API_URL:-/api}
        sentryDsn: ${SENTRY_DSN_FRONTEND:-}
  db:
    image: postgres:11.6-alpine
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
  redis:
    image: redis:3.2
    tty: true
    restart: always
